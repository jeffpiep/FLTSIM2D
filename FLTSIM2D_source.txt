'-----------------------------------------------------------
'
'					FLTSIM2D
'
'Longitudinal (2-D: Z & X) flight simulator 
'for Atari 800XL 2017 8-bit BASIC 10-Liner
'
'Jeff Piepmeier
'march 4, 2017
'http://jeffpiepmeier.blogspot.com/
'http://github.com/jeffpiep/
'
'Parsed with TurboBASIC XL Parser Tool 
'http://github.com/dmsc/tbxl-parser
$options +optimize, optimize=-convert_percent-const_replace
'Tested on Altirra
'-----------------------------------------------------------

DIM A$(1)

'SET UP CONSTANTS AND INITIAL CONDITIONS
PI = 3.14159265DT = 0.1 : REM (S) TIME STEPVX = 40 : REM (M/S) INITIAL SPEEDVZ = 0 : REM (M/S)X = 0 : REM (M) INITIAL POSITIONZ = 1000 : REM (M)OMEGA = 0 : REM (RAD/S) INITIAL PITCH RATEPITCH = 2*PI/180 : REM (RAD) INITIAL PITCHMASS = 900 : REM (KG)G = 9.81 : REM (M/S^2) ACCEL OF GRAVITY
WEIGHT = MASS*G : REM (N)
IYY = 1825 : REM (KG-M^2) MOMENT OF INERTIARHO = 1.225 : REM (KG/M^2) STP AIR DENSITYSW = 16.2 : REM (M^2) WIND AREASE = 3.3 : REM (M^2) TAILPLANE AREACM = -0.044 : REM WING MOMENT COEFFICIENTCHORD = 1.4 : REM (M) MEAN CHORD LENGTH
AR = 7.32 : REM ASPECT RATIO CGARM = -CHORD * 0.0 : rem 0.19 : REM (M) CG FORWARD OF CENTER OF LIFT
THRUST = 1000 : REM (N) STATIC THRUSTARM = 6 : REM (M) TAILPLANE MOMENT ARMELANG = 0 : REM (DEG) ELEVATOR SETTING

DT =0.1
VX =49.35582574
VZ =0.1868564985
X =10073.2996
Z =1032.10185
OMEGA =-1.837603453E-03
PITCH =0.0300179168
MASS =900
G =9.81
WEIGHT =8829
IYY =1825
RHO =1.225
SW =16.2
SE =3.3
CM =-0.044
CHORD =1.4
AR =7.32
CGARM = -CHORD * .3
THRUST =1000
ARM =6
ELANG =0
 
CLS 
DO

POSITION 2,2
?"PITCH ";PITCH*180/PI," "
?"ALTITUDE ";Z*3.28084," "
?"SPEED ";VX*1.94384,VZ*196.85," "
?"THROTTLE "; THRUST," "
?"ELEVATOR "; ELANG," "


'ATMOSPHERE 
RHOZ = (1-Z*8.0E-05)*RHO : REM LINEAR APPROX AIR DENSITYQ = (VX^2+VZ^2)*RHOZ*0.5 : REM DYNAMIC PRESSURE
'PLANE
WIND = ATN(VZ/VX) : REM WIND COORDINATE SYSTEM ROTATION ANGLEAOA = PITCH-WIND : REM ANGLE OF ATTACKCL = SIN(2*AOA*(EXP(-ABS(AOA)/PI/8)+1))*1.35+0.25 : REM LIFT COEFFICIENT CD = SIN(AOA)^2+0.0223+9.2E-03+0.01 : REM DRAG COEFFICIENTLIFT = Q*CL*SW : REM LIFT FORCELX = -LIFT*SIN(WIND) : REM LIFT FORCE IN INERTIAL FRAMELZ = COS(WIND)*LIFTDRAG = Q*CD*SW : REM DRAG FORCEDX = -DRAG*COS(WIND) : REM DRAGE FORCE IN INERTIAL FRAMEDZ = -DRAG*SIN(WIND)
MW = Q*CM*SW*CHORD : REM MOMENT DUE TO WIND'MOMENTS - ADD +PI/4 TO RAISE WING ABOUT CG
ML = LIFT*CGARM*COS(WIND+1.25) : REM TAILPLANE MOMENT DUE TO LIFT
MD = DRAG*CGARM*SIN(WIND+1.25) : REM TAILPLANE MOMENT DUE TO DRAG

'TAILPLANE
VE = OMEGA*ARM : REM TAILPLANE VELOCITY DUE TO PITCH RATEDVXE = -VE*SIN(PITCH) : REM RELATIVE VELOCITY IN INERTIAL FRAMEDVZE = COS(PITCH)*VEVXE = VX+DVXE : REM TAILPLANE TOTAL VELOCITY IN INERTIAL FRAMEVZE = VZ+DVZEWINDE = ATN(VZE/VXE) : REM TAILPLANE WIND COORDINATE FRAME ROTATION
DOWNWASH = 0:rem 2*CL/PI/ARAOAE = PITCH-WINDE-DOWNWASH + 0.23*ELANG*PI/180 : REM TAILPLANE ANGLE OF ATTACKCLE = SIN(2*AOAE) : REM + ELANG/100 : REM TAILPLANE LIFT COEFFICIENTCDE = 1.8*SIN(AOAE)^2 : REM TAILPLANE DRAG COEFFICIENTELIFT = Q*CLE*SE : REM TAILPLANE LIFT FORCEELX = -ELIFT*SIN(WINDE) : REM TAILPLANE LIFT FORCE IN INERTIAL FRAMEELZ = COS(WINDE)*ELIFTEDRAG = Q*CDE*SE : REM TAILPLANE DRAG FORCEEDX = -EDRAG*COS(WINDE) : REM TAILPLANE DRAG FORCE IN INERTIAL FRAMEEDZ = -EDRAG*SIN(WINDE)MEL = ELIFT*ARM*COS(WINDE) : REM TAILPLANE MOMENT DUE TO LIFTMED = EDRAG*ARM*SIN(WINDE) : REM TAILPLANE MOMENT DUE TO DRAG
'THRUST AND FUEL
TX = COS(PITCH)*THRUST : REM THRUST IN INERTIAL FRAMETZ = SIN(PITCH)*THRUST

'NEWTON'S THIRD LAW
FX = TX+LX+DX+ELX+EDX : REM SUM FORCESFZ = TZ+LZ+DZ+ELZ+EDZ-WEIGHTMM = MW+MEL+MED+ ML+MD : REM SUM MOMENTS
'MM = MW+MEL+MED + WEIGHT*CGARM*COS(PITCH) : REM SUM MOMENTS

'DUMP "P:"
'TIME STEP EQUATIONS OF MOTION: NEWTON'S FIRST & SECOND LAWS
VX = FX/MASS*DT+VX VZ = FZ/MASS*DT+VZOMEGA = MM/IYY*DT+OMEGA
X = VX*DT+XZ = VZ*DT+ZPITCH = PITCH-OMEGA*DT
'PILOT INPUT
A$=INKEY$
THRUST = THRUST + 100*((A$="\1F")-(A$="\1E"))
ELANG = ELANG + ((A$="T")-(A$="B"))

LOOP 
