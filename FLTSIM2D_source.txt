'-----------------------------------------------------------
'
'					FLTSIM2D
'
'Longitudinal (2-D: Z & X) flight simulator 
'for Atari 800XL 2017 8-bit BASIC 10-Liner
'
'Jeff Piepmeier
'March 4, 2017
'http://jeffpiepmeier.blogspot.com/
'http://github.com/jeffpiep/
'
'Parsed with TurboBASIC XL Parser Tool 
'http://github.com/dmsc/tbxl-parser
$options +optimize, optimize=-convert_percent-const_replace, optimize=+const_folding
'Tested on Altirra
'http://www.virtualdub.org/altirra.html
'-----------------------------------------------------------

DIM K$(1)

'SET UP CONSTANTS AND INITIAL CONDITIONS
'PI = 3.14159265
DT = .1 : REM (S) TIME STEP (0.1 SEEMS STABLE, 0.2 MIGHT BE OK, 1.0 IS UNSTABLE)
'U = 0 : REM (M/S) REFERENCE FRAME X-AXIS SPEED
'W = 0 : REM (M/S) REFERENCE FRAME Z-AXIS SPEED (+ IS DOWN)
'X = 0 : REM (M) INERTIAL FRAME 
'Z = 0 : REM (M) INERTIAL FRAME
'OMEGA = 0 : REM (RAD/S) INITIAL THETA RATE
'THETA = 0*PI/180 : REM (RAD) INITIAL THETA
'MASS = 1E3 : REM (KG)
'G = 9.807 : REM (M/S^2) ACCEL OF GRAVITY
'IYY = 1825 : REM (KG-M^2) MOMENT OF INERTIA
'RHO = 1.225 : REM (KG/M^2) STP AIR DENSITY
'SW = 16.2 : REM (M^2) WIND AREA
'ST = 3.25 : REM (M^2) TAILPLANE AREA
'STSW = 0.2 : REM ST/SW TAIL TO WING AREA RATIO
'ER = 0.415 : REM ELEVATOR CHORD TO TAILPLANE CHORD RATIO
'CM = -0.022 : REM WING MOMENT COEFFICIENT
'CHORD = 1.4 : REM (M) MEAN CHORD LENGTH
'AR = 7.38 : REM ASPECT RATIO 
'ARMW = - CHORD * 0.2 : REM (M) CG RELATIVE TO CENTER OF LIFT 
'THROTTLE = 0 : REM (%) THROTTLE SEETING
'ARMT = 4.3 : REM (M) TAILPLANE MOMENT ARM RELATIVE TO a.c.
'DLTA = 0 : REM (DEG) ELEVATOR SETTING - UP IS NEGATIVE 
'FLAPS = 0 : REM FLAPS UP
'C = 0.12 : REM ALTITUDE POWER DROP OFF PARAMETER
'OSWALD = 0.75 : REM OSWALD AIRCRAFT EFFICIENCY



CLS : REM CLEAR THE SCREEN
POKE 752,1 : REM TURN OFF CURSOR

REPEAT
BASETIME = TIME
'ATMOSPHERE 
SIGMA=(1-Z*8.0E-05) : REM LINEARY APPROX FOR RELATIVE AIR DENSITY
RHOZ = 1.225*SIGMA : REM AIR DENSITY AT ALTITUDE
STALL = (U-2*FLAPS)>25  : REM DETERMINE IF NOT STALLED
QSW = 16.2*0.5*(U^2+W^2)*RHOZ*STALL : REM DYNAMIC PRESSURE * WING AREA

UNOSING = 1/(U + (U=0)) : REM U != 0
SLOPE = W*UNOSING : REM SLOPE OF WIND
'PLANE
ALPHA = SLOPE - .22 * SLOPE^3 : REM ANGLE OF ATTACH WRT WIND
'TAILPLANE
'ALPHAT = ATN((W+OMEGA*ARMT)/(U+(U=0))) + 1.15 * DLTA*PI/180 * ER + 2*CL/PI/AR - 5*PI/180
ALPHAT = ALPHA + OMEGA*UNOSING*4.3 + 8.33E-3*DLTA + .0863*CL - .0873

'LIFT COEFFICIENT
'CL = 0.3+0.167*FLAPS+(ALPHA<=0.244)*4.8*ALPHA+(ALPHA>0.244)*(1.6-46*(ALPHA-17*PI/180)^2) : REM LIFT COEFFICIENT 
CL = 0.3+0.16*FLAPS+4.8*ALPHA+12*ALPHA*ABS(ALPHA)-46*ALPHA^3 : REM LIFT COEFFICIENT
CLT = .4*ALPHAT-.24*ALPHAT^3 : REM TAILPLANE LIFT COEFFICIENT
'DRAG COEFFICIENT
'CD = SIN(ALPHA)^2+0.0223+9.2E-03+0.01 + FLAPS*0.02 : REM DRAG COEFFICIENT
CD = 0.03 + .0575*(CL+CLT)^2 : REM DRAG COEFFICIENT
'CDT = 1.8*SIN(ALPHAT)^2 : REM TAILPLANE DRAG COEFFICIENT

'FORCES
'LIFTT = QSW*CLT : REM TAILPLANE LIFT FORCE
'DRAGT = Q*ST*CDT : REM TAILPLANE DRAG FORCE
'LIFTW = QSW*CL : REM WING LIFT FORCE
'DRAGW = QSW*CD : REM WING DRAG FORCE

'ENGINE
'POWER DROPOFF WITH ALTITUDE FROM C
THRUST=(SIGMA-.12)*THROTTLE*UNOSING*1080 : REM INVERT PROPULSIVE POWER EQUATION, AND MAX POWER IS 95kW
THRUST=THRUST*(THRUST<=2000)+2000*(THRUST>2000) : REM LIMIT THRUST TO 2000 N
 
'FORCES AND MOMENTS
'ZFORCE = -QSW*(CL+CLT)
'XFORCE = -DRAGW : REM REMOVE THIS PART +DRAGT)
'MY = QSW*CM*CHORD + LIFTW*ARMW - LIFTT*ARMT : REM + IS NOSE UP
MY = -QSW*(.0308 + CL*.28 + CLT*4.3) : REM COMPUTE PITCHING MOMENT, + IS NOSE UP

'TIME STEP EQUATIONS OF MOTION
'OMEGA = OMEGA + (MY/IYY)*DT
OMEGA = OMEGA + MY*5.48e-5
OMEGA = OMEGA * ((Z>.01) ! (OMEGA>0)) : REM NO ROTATION UNLESS POSITIVE WHEN ON GROUND
'U = U + ( (THRUST-DRAGW)/MASS - G*SINTH - OMEGA*W ) * DT  
'W = W + (     ZFORCE/MASS + G*COSTH + OMEGA*U ) * DT
U = U + ( (THRUST-QSW*CD)*1E-3 - SINTH*9.81 - OMEGA*W ) * DT  
W = W + (   -QSW*(CL+CLT)*1E-3 + COSTH*9.81 + OMEGA*U ) * DT
W = W * ((Z>.01) ! (W<0)) : REM NO VERTICAL VELOCITY IF ON GROUND, UNLESS ITS UP

'INERTIAL FRAME UPDATE
T=T+DT
THETA = THETA + OMEGA*DT
'COSTH = COS(THETA)
'SINTH = SIN(THETA)
COSTH = 1 - 0.49*THETA*THETA
SINTH = THETA-.15*THETA^3
VX = (U*COSTH + W*SINTH)
VZ = (U*SINTH - W*COSTH)
X = X + VX*DT
Z = Z + VZ*DT
Z = Z * (Z>0) : REM RESTRICT X TO ABOVE GROUND

'Maybe make this a few meters - what if someone stalls right after takeoff?
'whatever is needed just to get off the ground
OKTOLAND = OKTOLAND ! (Z>9) : REM BE A LITTLE FORGIVING ON THE TAKEOFF

'PILOT INPUT
K$=INKEY$
THROTTLE = THROTTLE + 5*((K$="\1F")*(THROTTLE<100)-(K$="\1E")*(THROTTLE>0))
THROTTLE = THROTTLE + (100-THROTTLE)*((K$="/") & (THROTTLE=0)) - THROTTLE*((K$="/") & (THROTTLE>0))
DLTA = DLTA + 0.5*((K$="T")*(DLTA<23)-(K$="B")*(DLTA>-28))
FLPIN = FLPIN + ((K$="N")*(FLPIN<3)-(K$="Y")*(FLPIN>0))
FLAPS = 0.05*FLPIN+0.95*FLAPS : REM A LITTLE IIR EXPONENTIAL RESPONSE TO MODEL THE FLAP DRIVE MOTOR

POSITION 2,2
'?"TIME",T," ",(TIME-BASETIME)
?"PITCH",INT(THETA*573)*.1," "
?"ALT.",INT(Z*3.28)," "
?"KTAS",INT(U*1.94)," "
?"VRATE",INT(VZ*197)," "
?
?"POWER", THROTTLE," "
?"ELEV.", DLTA," "
?"FLAPS ", INT(FLAPS*10+0.5)," "
?"STALL ", NOT STALL
?
?"TIME",T," ",(TIME-BASETIME)
?"DIST.",INT(X*1.09)," "

'lprint T,THETA*180/3.14


UNTIL OKTOLAND & (Z=0) 
IF VZ >-1
	? "TOUCHDOWN"
ELSE
	? "YOU CRASHED!"
ENDIF
