'-----------------------------------------------------------
'
'					FLTSIM2D
'
'Longitudinal (2-D: Z & X) flight simulator 
'for Atari 800XL 2017 8-bit BASIC 10-Liner
'
'Jeff Piepmeier
'March 4, 2017
'http://jeffpiepmeier.blogspot.com/
'http://github.com/jeffpiep/
'
'Parsed with TurboBASIC XL Parser Tool 
'http://github.com/dmsc/tbxl-parser
$options +optimize, optimize=-convert_percent-const_replace, optimize=+const_folding
'Tested on Altirra
'http://www.virtualdub.org/altirra.html
'-----------------------------------------------------------

DIM K$(1)
DT = .1 : REM (S) TIME STEP 

CLS : REM CLEAR THE SCREEN
POKE 752,1 : REM TURN OFF CURSOR

REPEAT
BASETIME = TIME
'ATMOSPHERE 
SIGMA=(1-Z*8.0E-05) : REM LINEARY APPROX FOR RELATIVE AIR DENSITY
RHOZ = 1.225*SIGMA : REM AIR DENSITY AT ALTITUDE
STALL = (U-2*FLAPS)>25  : REM DETERMINE IF NOT STALLED
QSW = 8.1*(U*U+W*W)*RHOZ*STALL : REM DYNAMIC PRESSURE * WING AREA

'ANGLE OF ATTACK(S)
UNOSING = 1/(U + (U=0)) : REM U != 0
SLOPE = W*UNOSING : REM SLOPE OF WIND
ALPHA = SLOPE - .22 * SLOPE^3 : REM WING ANGLE OF ATTACK WRT WIND
ALPHAT = ALPHA + OMEGA*UNOSING*4.3 + 8.33E-3*DLTA + .0863*CL - .0873 : REM TAILPLANE AOA

'LIFT & DRAG COEFFICIENTS
CL = 0.3+0.16*FLAPS+4.8*ALPHA+12*ALPHA*ABS(ALPHA)-46*ALPHA^3 : REM WING LIFT COEFFICIENT
CLT = .4*ALPHAT -.24*ALPHAT^3 : REM TAILPLANE LIFT COEFFICIENT WITH AREA RATIO
CLL = CL+CLT
CD = .025 + .0575*CLL*CLL : REM DRAG COEFFICIENT USING OSWALD EFFICIENCY

'ENGINE WITH DROPOFF DUE TO ALTITUDE
THRUST=(SIGMA-.05)*THROTTLE*UNOSING*1100 : REM INVERT PROPULSIVE POWER EQUATION
THRUST=THRUST*(THRUST<=2000)+2000*(THRUST>2000) : REM LIMIT THRUST TO 2000 N

'TIME STEP EQUATIONS OF MOTION
MY = -QSW*(.0308 + CL*.28 + CLT*4.3) : REM COMPUTE PITCHING MOMENT, + IS NOSE UP
OMEGA = OMEGA + MY*5.48e-5
OMEGA = OMEGA * ((Z>.01) ! (OMEGA>0)) : REM NO ROTATION UNLESS POSITIVE WHEN ON GROUND
U = U + ( (THRUST-QSW*CD)*1E-3 - SINTH*9.81 - OMEGA*W ) * DT  
W = W + (   -QSW*CLL*1E-3 + COSTH*9.81 + OMEGA*U ) * DT
W = W * ((Z>.01) ! (W<0)) : REM NO VERTICAL VELOCITY IF ON GROUND, UNLESS ITS UP

'INERTIAL FRAME UPDATE
T=T+DT
THETA = THETA + OMEGA*DT
COSTH = 1 - 0.49*THETA*THETA
SINTH = THETA -.15*THETA^3
VX = (U*COSTH + W*SINTH)
VZ = (U*SINTH - W*COSTH)
X = X + VX*DT
Z = Z + VZ*DT
Z = Z * (Z>0) : REM RESTRICT X TO ABOVE GROUND

'Maybe make this a few meters - what if someone stalls right after takeoff?
'whatever is needed just to get off the ground
OKTOLAND = OKTOLAND ! (Z>9) : REM BE A LITTLE FORGIVING ON THE TAKEOFF

'PILOT INPUT
K$=INKEY$
THROTTLE = THROTTLE + 5*((K$="\1F")*(THROTTLE<100)-(K$="\1E")*(THROTTLE>0))
THROTTLE = THROTTLE + (100-THROTTLE)*((K$="/") & (THROTTLE=0)) - THROTTLE*((K$="/") & (THROTTLE>0))
DLTA = DLTA + 0.5*((K$="T")*(DLTA<23)-(K$="B")*(DLTA>-28))
FLPIN = FLPIN + ((K$="N")*(FLPIN<3)-(K$="Y")*(FLPIN>0))
FLAPS = 0.05*FLPIN+0.95*FLAPS : REM A LITTLE IIR EXPONENTIAL RESPONSE TO MODEL THE FLAP DRIVE MOTOR

POSITION 2,2
'?"TIME",T," ",(TIME-BASETIME)
?"ALT.",INT(Z*3.28)," "
?"KTAS",INT(U*1.94)," "
?"VRATE",INT(VZ*197)," "
?"PITCH",INT(THETA*573)*.1," "
?
?"POWER", THROTTLE," "
?"ELEV.", DLTA," "
?"FLAPS ", INT(FLAPS*10+0.5)," "
?"STALL ", NOT STALL
?
?"TIME",T," ",(TIME-BASETIME)
?"DIST.",INT(X*1.09)," "

'lprint T,THETA*180/3.14


UNTIL OKTOLAND & (Z=0) 
IF VZ >-1
	? "TOUCHDOWN"
ELSE
	? "YOU CRASHED!"
ENDIF
